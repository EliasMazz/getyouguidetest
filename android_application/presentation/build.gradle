apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        applicationId globalConfiguration["androidApplicationId"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            storeFile file('../keystore')
            storePassword 't3stg3tY0urGu1d3'
            keyAlias 'getYourGuide'
            keyPassword 'g3tY0urGu1d3'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            versionNameSuffix '-DEBUG'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    implementation project(':domain')
    implementation project(':data')

    implementation presentationDependencies.multidex
    implementation presentationDependencies.androidSupport
    implementation presentationDependencies.design
    implementation presentationDependencies.kotlin
    implementation presentationDependencies.dagger
    kapt presentationDependencies.daggerCompiler
    kapt presentationDependencies.daggerProcessor
    implementation presentationDependencies.daggerAndroid
    implementation presentationDependencies.daggerSupport
    implementation presentationDependencies.recyclerView
    implementation presentationDependencies.cardView
    implementation presentationDependencies.rxJava
    implementation presentationDependencies.rxAndroid
    implementation presentationDependencies.googleFindBugs
    implementation presentationDependencies.ankoCommons
    implementation presentationDependencies.appCompat
    implementation presentationDependencies.constraintLayout
    implementation presentationDependencies.imageLoaderGlide
    kapt presentationDependencies.imageLoaderGlideProcessor


    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    androidTestImplementation presentationTestDependencies.testingRunner
    androidTestImplementation presentationTestDependencies.testingRules
    androidTestImplementation presentationTestDependencies.mockito
    androidTestImplementation presentationTestDependencies.dexmaker
    androidTestImplementation presentationTestDependencies.dexmakerMockito
    androidTestImplementation presentationTestDependencies.espresso
    androidTestImplementation presentationTestDependencies.espressoIntents
    androidTestImplementation presentationTestDependencies.supportAnnotations

    //Development
    implementation developmentDependencies.leakCanary
    implementation developmentDependencies.timber
}
